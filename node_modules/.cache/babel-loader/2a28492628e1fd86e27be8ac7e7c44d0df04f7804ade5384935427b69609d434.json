{"ast":null,"code":"var _jsxFileName = \"/Users/amitmaheshwarvaranasi/Documents/projects/MyWebsite/src/Components/Projects.js\",\n  _s = $RefreshSig$();\n// projects.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Replace 'AmitVaranasi' with your actual GitHub username\n        const username = 'AmitVaranasi';\n        const response = await fetch(`https://api.github.com/users/${username}/repos`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch repositories: ${response.statusText}`);\n        }\n        const repos = await response.json();\n        const projectDataPromises = repos.map(async repo => {\n          const readmeResponse = await fetch(`https://raw.githubusercontent.com/${username}/${repo.name}/main/README.md` // Assuming README is in main branch\n          );\n          let description = '';\n          if (readmeResponse.ok) {\n            description = await readmeResponse.text();\n          } else {\n            console.warn(`Failed to fetch README for ${repo.name}. Status: ${readmeResponse.status}`);\n            description = \"No Readme Found\";\n          }\n          return {\n            title: repo.name,\n            description: description,\n            link: repo.html_url\n          };\n        });\n        const projectData = await Promise.all(projectDataPromises);\n        setProjects(projectData);\n      } catch (err) {\n        console.error('Error fetching projects:', err);\n        setError(err.message || 'An error occurred while fetching projects.');\n      }\n    };\n    fetchProjects();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  if (projects.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: project.description.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View on GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"HWd4WJ49bFOqIBoIA6ASGlXnWoA=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","error","setError","fetchProjects","username","response","fetch","ok","Error","statusText","repos","json","projectDataPromises","map","repo","readmeResponse","name","description","text","console","warn","status","title","link","html_url","projectData","Promise","all","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","project","index","dangerouslySetInnerHTML","__html","replace","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/amitmaheshwarvaranasi/Documents/projects/MyWebsite/src/Components/Projects.js"],"sourcesContent":["// projects.js\n\nimport React, { useState, useEffect } from 'react';\n\nconst Projects = () => {\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Replace 'AmitVaranasi' with your actual GitHub username\n        const username = 'AmitVaranasi';\n        const response = await fetch(`https://api.github.com/users/${username}/repos`);\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch repositories: ${response.statusText}`);\n        }\n\n        const repos = await response.json();\n\n        const projectDataPromises = repos.map(async (repo) => {\n          const readmeResponse = await fetch(\n            `https://raw.githubusercontent.com/${username}/${repo.name}/main/README.md` // Assuming README is in main branch\n          );\n\n          let description = '';\n          if (readmeResponse.ok) {\n            description = await readmeResponse.text();\n          } else {\n            console.warn(`Failed to fetch README for ${repo.name}. Status: ${readmeResponse.status}`);\n             description = \"No Readme Found\"\n          }\n\n          return {\n            title: repo.name,\n            description: description,\n            link: repo.html_url,\n          };\n        });\n\n        const projectData = await Promise.all(projectDataPromises);\n        setProjects(projectData);\n      } catch (err) {\n        console.error('Error fetching projects:', err);\n        setError(err.message || 'An error occurred while fetching projects.');\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (projects.length === 0) {\n    return <div>Loading projects...</div>;\n  }\n\n  return (\n    <div>\n      <h2>My Projects</h2>\n      <ul>\n        {projects.map((project, index) => (\n          <li key={index}>\n            <h3>{project.title}</h3>\n             <div dangerouslySetInnerHTML={{ __html: project.description.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>')}}/>\n            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              View on GitHub\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}