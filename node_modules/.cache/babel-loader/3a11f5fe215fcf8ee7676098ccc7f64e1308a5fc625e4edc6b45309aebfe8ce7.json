{"ast":null,"code":"var _jsxFileName = \"/Users/amitmaheshwarvaranasi/Documents/projects/MyWebsite/src/Components/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Projects.css';\nimport { Card, Button, CardGroup, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Replace 'AmitVaranasi' with your actual GitHub username\n        const username = 'AmitVaranasi';\n        const response = await fetch(`https://api.github.com/users/${username}/repos`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch repositories: ${response.statusText}`);\n        }\n        const repos = await response.json();\n        const projectDataPromises = repos.map(async repo => {\n          const readmeResponse = await fetch(`https://raw.githubusercontent.com/${username}/${repo.name}/main/README.md` // Assuming README is in main branch\n          );\n          let description = '';\n          if (readmeResponse.ok) {\n            description = await readmeResponse.text();\n            // Remove markdown-style headers and lists (can be improved)\n            description = description.replace(/^(#+)\\s+(.+)$/gm, ''); // Remove headers\n            description = description.replace(/^[\\-*]\\s+(.+)$/gm, ''); // Remove list items\n          } else {\n            console.warn(`Failed to fetch README for ${repo.name}. Status: ${readmeResponse.status}`);\n            description = \"No Readme Found\";\n          }\n          return {\n            title: repo.name,\n            description: description,\n            link: repo.html_url\n          };\n        });\n        const projectData = await Promise.all(projectDataPromises);\n        setProjects(projectData);\n      } catch (err) {\n        console.error('Error fetching projects:', err);\n        setError(err.message || 'An error occurred while fetching projects.');\n      }\n    };\n    fetchProjects();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '70px'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  if (projects.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '70px'\n      },\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 70\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Those who plan do better than those who do not plan, even though they rarely stick to their plan. \\u2013 Winston Churchill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: project.description.substring(0, 150) + \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: project.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                children: \"Github link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"HWd4WJ49bFOqIBoIA6ASGlXnWoA=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","CardGroup","Row","Col","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","error","setError","fetchProjects","username","response","fetch","ok","Error","statusText","repos","json","projectDataPromises","map","repo","readmeResponse","name","description","text","replace","console","warn","status","title","link","html_url","projectData","Promise","all","err","message","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","length","xs","md","className","project","index","width","Body","Title","Text","substring","href","target","rel","variant","_c","$RefreshReg$"],"sources":["/Users/amitmaheshwarvaranasi/Documents/projects/MyWebsite/src/Components/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Projects.css';\nimport { Card, Button, CardGroup, Row, Col } from 'react-bootstrap';\n\nconst Projects = () => {\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Replace 'AmitVaranasi' with your actual GitHub username\n        const username = 'AmitVaranasi';\n        const response = await fetch(`https://api.github.com/users/${username}/repos`);\n\n        if (!response.ok) {\n          throw new Error(`Failed to fetch repositories: ${response.statusText}`);\n        }\n\n        const repos = await response.json();\n\n        const projectDataPromises = repos.map(async (repo) => {\n          const readmeResponse = await fetch(\n            `https://raw.githubusercontent.com/${username}/${repo.name}/main/README.md` // Assuming README is in main branch\n          );\n\n          let description = '';\n          if (readmeResponse.ok) {\n            description = await readmeResponse.text();\n              // Remove markdown-style headers and lists (can be improved)\n             description = description.replace(/^(#+)\\s+(.+)$/gm, ''); // Remove headers\n             description = description.replace(/^[\\-*]\\s+(.+)$/gm, ''); // Remove list items\n          } else {\n            console.warn(`Failed to fetch README for ${repo.name}. Status: ${readmeResponse.status}`);\n             description = \"No Readme Found\"\n          }\n\n          return {\n            title: repo.name,\n            description: description,\n            link: repo.html_url,\n          };\n        });\n\n        const projectData = await Promise.all(projectDataPromises);\n        setProjects(projectData);\n      } catch (err) {\n        console.error('Error fetching projects:', err);\n        setError(err.message || 'An error occurred while fetching projects.');\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  if (error) {\n    return <div style={{textAlign:'center', marginTop:'70px'}}>Error: {error}</div>;\n  }\n\n  if (projects.length === 0) {\n    return <div style={{textAlign:'center', marginTop:'70px'}}>Loading projects...</div>;\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <div style={{ marginTop: 70 }}>\n        <h1>Projects</h1>\n        <h5>\n          Those who plan do better than those who do not plan, even though they rarely stick to their plan. â€“ Winston Churchill\n        </h5>\n      </div>\n      <br />\n      <hr />\n        <Row xs={1} md={2} className=\"g-4\">\n          {projects.map((project, index) => (\n            <Col key={index}>\n             <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                  <Card.Title>{project.title}</Card.Title>\n                  <Card.Text>\n                  {project.description.substring(0, 150)+\"...\"}\n                  </Card.Text>\n                  <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Button variant=\"primary\">Github link</Button>\n                  </a>\n                </Card.Body>\n              </Card>\n             </Col>\n            ))}\n       </Row>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}